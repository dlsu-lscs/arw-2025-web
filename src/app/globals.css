@import 'tailwindcss';
@import 'tw-animate-css';

@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  /* Next.js fonts (from layout.tsx) */
  --font-press-start: var(--font-press-start);
  --font-space-mono: var(--font-space-mono);
  --font-space-grotesk: var(--font-space-grotesk);
  /* Local font */
  --font-tiny5: var(--font-tiny5);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-chart-5: var(--chart-5);
  --color-chart-4: var(--chart-4);
  --color-chart-3: var(--chart-3);
  --color-chart-2: var(--chart-2);
  --color-chart-1: var(--chart-1);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}

:root {
  --radius: 0.625rem;
  --background: oklch(1 0 0);
  --foreground: oklch(0.145 0 0);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.145 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.145 0 0);
  --primary: oklch(0.205 0 0);
  --primary-foreground: oklch(0.985 0 0);
  --secondary: oklch(0.97 0 0);
  --secondary-foreground: oklch(0.205 0 0);
  --muted: oklch(0.97 0 0);
  --muted-foreground: oklch(0.556 0 0);
  --accent: oklch(0.97 0 0);
  --accent-foreground: oklch(0.205 0 0);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.922 0 0);
  --input: oklch(0.922 0 0);
  --ring: oklch(0.708 0 0);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.985 0 0);
  --sidebar-foreground: oklch(0.145 0 0);
  --sidebar-primary: oklch(0.205 0 0);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.97 0 0);
  --sidebar-accent-foreground: oklch(0.205 0 0);
  --sidebar-border: oklch(0.922 0 0);
  --sidebar-ring: oklch(0.708 0 0);
}

.dark {
  --background: oklch(0.145 0 0);
  --foreground: oklch(0.985 0 0);
  --card: oklch(0.205 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.205 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: oklch(0.922 0 0);
  --primary-foreground: oklch(0.205 0 0);
  --secondary: oklch(0.269 0 0);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.269 0 0);
  --muted-foreground: oklch(0.708 0 0);
  --accent: oklch(0.269 0 0);
  --accent-foreground: oklch(0.985 0 0);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.556 0 0);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.205 0 0);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.269 0 0);
  --sidebar-accent-foreground: oklch(0.985 0 0);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(0.556 0 0);
}

html,
body {
  min-height: 100vh;
}

body {
  color: var(--foreground);
  font-family: var(--font-press-start);
}

.font-pixel {
  font-family: 'Press Start 2P', fantasy;
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* Shadcn-style scrollbar */
.shadcn-scrollbar {
  scrollbar-width: thin;
  scrollbar-color: hsl(var(--border)) transparent;
}

.shadcn-scrollbar::-webkit-scrollbar {
  width: 10px; /* w-2.5 = 10px */
}

.shadcn-scrollbar::-webkit-scrollbar-track {
  background: transparent;
}

.shadcn-scrollbar::-webkit-scrollbar-thumb {
  background: hsl(var(--border));
  border-radius: 9999px; /* rounded-full */
  border: 1px solid transparent;
  background-clip: content-box;
}

.shadcn-scrollbar::-webkit-scrollbar-thumb:hover {
  background: hsl(var(--border) / 0.8);
  background-clip: content-box;
}

.pixel-corners,
.pixel-corners--wrapper {
  clip-path: polygon(
    0px 0px,
    calc(100% - 15px) 0px,
    calc(100% - 15px) 3px,
    calc(100% - 9px) 3px,
    calc(100% - 9px) 6px,
    calc(100% - 6px) 6px,
    calc(100% - 6px) 9px,
    calc(100% - 3px) 9px,
    calc(100% - 3px) 15px,
    100% 15px,
    100% 100%,
    15px 100%,
    15px calc(100% - 3px),
    9px calc(100% - 3px),
    9px calc(100% - 6px),
    6px calc(100% - 6px),
    6px calc(100% - 9px),
    3px calc(100% - 9px),
    3px calc(100% - 15px),
    0px calc(100% - 15px)
  );
  position: relative;
  box-sizing: border-box;
  max-width: 100%;
  overflow: hidden;
}

.pixel-corner--modal {
  max-width: 90vw;
  max-height: 90vh;
  overflow-y: auto;

  background: white;

  /* Make padding responsive based on viewport size */
  padding: clamp(1rem, 5vw, 2rem);

  /* Define a responsive pixel unit that scales with the viewport */
  /* This ensures the corner design looks consistent on all screens */
  --pixel-unit: clamp(2px, 0.5vw, 6px);

  clip-path: polygon(
    0px 0px,
    calc(100% - calc(5 * var(--pixel-unit))) 0px,
    calc(100% - calc(5 * var(--pixel-unit))) var(--pixel-unit),
    calc(100% - calc(3 * var(--pixel-unit))) var(--pixel-unit),
    calc(100% - calc(3 * var(--pixel-unit))) calc(2 * var(--pixel-unit)),
    calc(100% - calc(2 * var(--pixel-unit))) calc(2 * var(--pixel-unit)),
    calc(100% - calc(2 * var(--pixel-unit))) calc(3 * var(--pixel-unit)),
    calc(100% - var(--pixel-unit)) calc(3 * var(--pixel-unit)),
    calc(100% - var(--pixel-unit)) calc(5 * var(--pixel-unit)),
    100% calc(5 * var(--pixel-unit)),
    100% 100%,
    calc(5 * var(--pixel-unit)) 100%,
    calc(5 * var(--pixel-unit)) calc(100% - var(--pixel-unit)),
    calc(3 * var(--pixel-unit)) calc(100% - var(--pixel-unit)),
    calc(3 * var(--pixel-unit)) calc(100% - calc(2 * var(--pixel-unit))),
    calc(2 * var(--pixel-unit)) calc(100% - calc(2 * var(--pixel-unit))),
    calc(2 * var(--pixel-unit)) calc(100% - calc(3 * var(--pixel-unit))),
    var(--pixel-unit) calc(100% - calc(3 * var(--pixel-unit))),
    var(--pixel-unit) calc(100% - calc(5 * var(--pixel-unit))),
    0px calc(100% - calc(5 * var(--pixel-unit)))
  );

  /* Make the outline and offset responsive too */
  outline: var(--pixel-unit) solid black;
  outline-offset: calc(-1 * var(--pixel-unit));
}

.pixel-corner--no-scroll-grid {
  max-width: 90vw;
  max-height: 90vh;
  background: white;
  padding: clamp(1rem, 5vw, 2rem);
  overflow-y: auto;

  --pixel-unit: clamp(2px, 0.5vw, 6px);

  clip-path: polygon(
    0px 0px,
    calc(100% - calc(5 * var(--pixel-unit))) 0px,
    calc(100% - calc(5 * var(--pixel-unit))) var(--pixel-unit),
    calc(100% - calc(3 * var(--pixel-unit))) var(--pixel-unit),
    calc(100% - calc(3 * var(--pixel-unit))) calc(2 * var(--pixel-unit)),
    calc(100% - calc(2 * var(--pixel-unit))) calc(2 * var(--pixel-unit)),
    calc(100% - calc(2 * var(--pixel-unit))) calc(3 * var(--pixel-unit)),
    calc(100% - var(--pixel-unit)) calc(3 * var(--pixel-unit)),
    calc(100% - var(--pixel-unit)) calc(5 * var(--pixel-unit)),
    100% calc(5 * var(--pixel-unit)),
    100% 100%,
    calc(5 * var(--pixel-unit)) 100%,
    calc(5 * var(--pixel-unit)) calc(100% - var(--pixel-unit)),
    calc(3 * var(--pixel-unit)) calc(100% - var(--pixel-unit)),
    calc(3 * var(--pixel-unit)) calc(100% - calc(2 * var(--pixel-unit))),
    calc(2 * var(--pixel-unit)) calc(100% - calc(2 * var(--pixel-unit))),
    calc(2 * var(--pixel-unit)) calc(100% - calc(3 * var(--pixel-unit))),
    var(--pixel-unit) calc(100% - calc(3 * var(--pixel-unit))),
    var(--pixel-unit) calc(100% - calc(5 * var(--pixel-unit))),
    0px calc(100% - calc(5 * var(--pixel-unit)))
  );

  outline: var(--pixel-unit) solid black;
  outline-offset: calc(-1 * var(--pixel-unit));

  display: flex;
  flex-direction: column; /* stack header, body, footer */
  gap: 1rem;
}

.pixel-corner--no-scroll {
  max-width: 90vw;
  max-height: 90vh;
  background: white;
  padding: clamp(1rem, 5vw, 2rem);

  --pixel-unit: clamp(2px, 0.5vw, 6px);

  clip-path: polygon(
    0px 0px,
    calc(100% - calc(5 * var(--pixel-unit))) 0px,
    calc(100% - calc(5 * var(--pixel-unit))) var(--pixel-unit),
    calc(100% - calc(3 * var(--pixel-unit))) var(--pixel-unit),
    calc(100% - calc(3 * var(--pixel-unit))) calc(2 * var(--pixel-unit)),
    calc(100% - calc(2 * var(--pixel-unit))) calc(2 * var(--pixel-unit)),
    calc(100% - calc(2 * var(--pixel-unit))) calc(3 * var(--pixel-unit)),
    calc(100% - var(--pixel-unit)) calc(3 * var(--pixel-unit)),
    calc(100% - var(--pixel-unit)) calc(5 * var(--pixel-unit)),
    100% calc(5 * var(--pixel-unit)),
    100% 100%,
    calc(5 * var(--pixel-unit)) 100%,
    calc(5 * var(--pixel-unit)) calc(100% - var(--pixel-unit)),
    calc(3 * var(--pixel-unit)) calc(100% - var(--pixel-unit)),
    calc(3 * var(--pixel-unit)) calc(100% - calc(2 * var(--pixel-unit))),
    calc(2 * var(--pixel-unit)) calc(100% - calc(2 * var(--pixel-unit))),
    calc(2 * var(--pixel-unit)) calc(100% - calc(3 * var(--pixel-unit))),
    var(--pixel-unit) calc(100% - calc(3 * var(--pixel-unit))),
    var(--pixel-unit) calc(100% - calc(5 * var(--pixel-unit))),
    0px calc(100% - calc(5 * var(--pixel-unit)))
  );

  outline: var(--pixel-unit) solid black;
  outline-offset: calc(-1 * var(--pixel-unit));

  display: flex; /* two-column layout */
  gap: 1rem;
}

/* Left section scrollable */
.pixel-left {
  flex: 1;
  overflow-y: auto;
  max-height: 100%; /* makes scroll respect container height */
  padding-right: 0.5rem; /* optional spacing */
  @apply overflow-y-auto pr-2;
}

.pixel-right {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  max-height: 100%;
}

.pixel-right img {
  max-height: 100%;
  width: auto; /* preserve aspect ratio */
  object-fit: contain; /* make sure it fits nicely */
}

/* Mobile responsive adjustments */
@media (max-width: 768px) {
  .pixel-corners,
  .pixel-corners--wrapper {
    clip-path: polygon(
      0px 0px,
      calc(100% - 8px) 0px,
      calc(100% - 8px) 2px,
      calc(100% - 6px) 2px,
      calc(100% - 6px) 4px,
      calc(100% - 4px) 4px,
      calc(100% - 4px) 6px,
      calc(100% - 2px) 6px,
      calc(100% - 2px) 8px,
      100% 8px,
      100% 100%,
      8px 100%,
      8px calc(100% - 2px),
      6px calc(100% - 2px),
      6px calc(100% - 4px),
      4px calc(100% - 4px),
      4px calc(100% - 6px),
      2px calc(100% - 6px),
      2px calc(100% - 8px),
      0px calc(100% - 8px)
    );
  }
}

/* Mobile-first: Simplify pixel corners on small screens */
@media (max-width: 768px) {
  .pixel-corners,
  .pixel-corners--wrapper {
    clip-path: polygon(
      0px 0px,
      calc(100% - 8px) 0px,
      calc(100% - 8px) 2px,
      calc(100% - 6px) 2px,
      calc(100% - 6px) 4px,
      calc(100% - 4px) 4px,
      calc(100% - 4px) 6px,
      calc(100% - 2px) 6px,
      calc(100% - 2px) 8px,
      100% 8px,
      100% 100%,
      8px 100%,
      8px calc(100% - 2px),
      6px calc(100% - 2px),
      6px calc(100% - 4px),
      4px calc(100% - 4px),
      4px calc(100% - 6px),
      2px calc(100% - 6px),
      2px calc(100% - 8px),
      0px calc(100% - 8px)
    );
  }
}
.pixel-corners {
  border: 9px solid transparent;
}

/* Mobile: Smaller border for mobile */
@media (max-width: 768px) {
  .pixel-corners {
    border: 6px solid transparent;
  }
}
.pixel-corners--wrapper {
  width: fit-content;
  height: fit-content;
}
.pixel-corners--wrapper .pixel-corners {
  display: block;
  clip-path: polygon(
    9px 18px,
    12px 18px,
    12px 12px,
    18px 12px,
    18px 9px,
    calc(100% - 18px) 9px,
    calc(100% - 18px) 12px,
    calc(100% - 12px) 12px,
    calc(100% - 12px) 18px,
    calc(100% - 9px) 18px,
    calc(100% - 9px) calc(100% - 18px),
    calc(100% - 12px) calc(100% - 18px),
    calc(100% - 12px) calc(100% - 12px),
    calc(100% - 18px) calc(100% - 12px),
    calc(100% - 18px) calc(100% - 9px),
    18px calc(100% - 9px),
    18px calc(100% - 12px),
    12px calc(100% - 12px),
    12px calc(100% - 18px),
    9px calc(100% - 18px)
  );
}
.pixel-corners--wrapper .pixel-corners {
  display: block;
  clip-path: polygon(
    9px 18px,
    12px 18px,
    12px 12px,
    18px 12px,
    18px 9px,
    calc(100% - 18px) 9px,
    calc(100% - 18px) 12px,
    calc(100% - 12px) 12px,
    calc(100% - 12px) 18px,
    calc(100% - 9px) 18px,
    calc(100% - 9px) calc(100% - 18px),
    calc(100% - 12px) calc(100% - 18px),
    calc(100% - 12px) calc(100% - 12px),
    calc(100% - 18px) calc(100% - 12px),
    calc(100% - 18px) calc(100% - 9px),
    18px calc(100% - 9px),
    18px calc(100% - 12px),
    12px calc(100% - 12px),
    12px calc(100% - 18px),
    9px calc(100% - 18px)
  );
}
.pixel-corners::after,
.pixel-corners--wrapper::after {
  content: '';
  position: absolute;
  clip-path: polygon(
    evenodd,
    /* === OUTER BORDER (clockwise from top-left) === */ 0px 0px,
    /* TOP-LEFT: Sharp corner start */ calc(100% - 15px) 0px,
    /* TOP EDGE: Moving right to start of top-right pixel corner */ calc(100% - 15px) 3px,
    /* TOP-RIGHT: Pixel corner step 1 */ calc(100% - 9px) 3px,
    /* TOP-RIGHT: Pixel corner step 2 */ calc(100% - 9px) 6px,
    /* TOP-RIGHT: Pixel corner step 3 */ calc(100% - 6px) 6px,
    /* TOP-RIGHT: Pixel corner step 4 */ calc(100% - 6px) 9px,
    /* TOP-RIGHT: Pixel corner step 5 */ calc(100% - 3px) 9px,
    /* TOP-RIGHT: Pixel corner step 6 */ calc(100% - 3px) 15px,
    /* TOP-RIGHT: Pixel corner step 7 */ 100% 15px,
    /* TOP-RIGHT: Pixel corner end */ 100% 100%,
    /* RIGHT EDGE: Moving down to bottom-right sharp corner */ 15px 100%,
    /* BOTTOM EDGE: Moving left from bottom-right sharp corner */ 15px calc(100% - 3px),
    /* BOTTOM-LEFT: Pixel corner step 1 */ 9px calc(100% - 3px),
    /* BOTTOM-LEFT: Pixel corner step 2 */ 9px calc(100% - 6px),
    /* BOTTOM-LEFT: Pixel corner step 3 */ 6px calc(100% - 6px),
    /* BOTTOM-LEFT: Pixel corner step 4 */ 6px calc(100% - 9px),
    /* BOTTOM-LEFT: Pixel corner step 5 */ 3px calc(100% - 9px),
    /* BOTTOM-LEFT: Pixel corner step 6 */ 3px calc(100% - 15px),
    /* BOTTOM-LEFT: Pixel corner step 7 */ 0px calc(100% - 15px),
    /* BOTTOM-LEFT: Pixel corner end */ 0px 0px,

    /* LEFT EDGE: Back to top-left sharp corner */
      /* === INNER CUTOUT (clockwise from bottom-left) === */ 9px calc(100% - 18px),
    /* INNER BOTTOM-LEFT: Start of content area cutout */ 12px calc(100% - 18px),
    /* INNER BOTTOM: Pixel step 1 */ 12px calc(100% - 12px),
    /* INNER BOTTOM: Pixel step 2 */ 18px calc(100% - 12px),
    /* INNER BOTTOM: Pixel step 3 */ 18px calc(100% - 9px),
    /* INNER BOTTOM: Pixel step 4 */ calc(100% - 18px) calc(100% - 9px),
    /* INNER BOTTOM-RIGHT: Moving right */ calc(100% - 18px) calc(100% - 12px),
    /* INNER RIGHT: Pixel step 1 */ calc(100% - 12px) calc(100% - 12px),
    /* INNER RIGHT: Pixel step 2 */ calc(100% - 12px) calc(100% - 18px),
    /* INNER RIGHT: Pixel step 3 */ calc(100% - 9px) calc(100% - 18px),
    /* INNER RIGHT: Pixel step 4 */ calc(100% - 9px) 18px,
    /* INNER TOP-RIGHT: Moving up */ calc(100% - 12px) 18px,
    /* INNER TOP: Pixel step 1 */ calc(100% - 12px) 12px,
    /* INNER TOP: Pixel step 2 */ calc(100% - 18px) 12px,
    /* INNER TOP: Pixel step 3 */ calc(100% - 18px) 9px,
    /* INNER TOP: Pixel step 4 */ 18px 9px,
    /* INNER TOP-LEFT: Moving left */ 18px 12px,
    /* INNER LEFT: Pixel step 1 */ 12px 12px,
    /* INNER LEFT: Pixel step 2 */ 12px 18px,
    /* INNER LEFT: Pixel step 3 */ 9px 18px,
    /* INNER LEFT: Pixel step 4 */ 9px calc(100% - 18px)
      /* INNER LEFT: Back to start (closing the cutout) */
  );
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background: #000000;
  display: block;
  pointer-events: none;
}
.pixel-corners::after {
  margin: -9px;
}
